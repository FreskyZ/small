<?xml version="1.0" encoding="utf-8" ?>
<shapes app="yama" database="YAMA">
  <table name="Book">
    <primary-key field="BookId" />
    <field name="BookId" type="id" />
    <field name="UserId" type="int" />
    <field name="Name" type="string" size="100" />
    <!-- <field name="Comment" type="text?" />
    <field name="Tags" type="string" size="200" /> -->
  </table>
  <table name="Section">
    <primary-key field="SectionId" />
    <foreign-key field="BookId" table="Book" />
    <field name="SectionId" type="id" />
    <field name="BookId" type="id" />
    <field name="ParentSectionId" type="id?" />
    <!-- section name is unique in book -->
    <field name="Name" type="string" size="100" />
  </table>
  <table name="Page">
    <primary-key field="PageId" />
    <foreign-key field="BookId" table="Book" />
    <foreign-key field="SectionId" table="Section" />
    <field name="PageId" type="id" />
    <field name="BookId" type="id" />
    <!-- if no section id, then belongs to virtual root -->
    <field name="SectionId" type="id?" />
    <!-- page name is unique in book -->
    <field name="Name" type="string" size="100" />
    <field name="Content" type="text" />
    <field name="Shared" type="bool" />
    <field name="ShareId" type="string?" size="36" />
  </table>
  <!-- TODO don't forget don't create new version when content same,
    and overwrite auto version when content same and manual save -->
  <table name="PageHistory">
    <primary-key field="PageHistoryId" />
    <foreign-key field="PageId" table="Page" />
    <field name="PageHistoryId" type="id" />
    <field name="PageId" type="id" />
    <!-- auto save and manual save default name use time (YYMMDD-hhmmss), but can change -->
    <field name="Name" type="string" size="100" />
  </table>
  <!-- history operation is stored as a positive direction edit,
   in other words, operations convert old version into new version,
   but only current version is saved and to show old version need to be reverse calculated -->
  <table name="PageOperation">
    <primary-key field="PageOperationId" />
    <foreign-key field="PageHistoryId" table="PageHistory" />
    <field name="PageOperationId" type="id" />
    <field name="PageHistoryId" type="id" />
    <!-- add | remove -->
    <field name="Kind" type="string" size="20" />
    <!-- when applying, start with newcontent=originalcontent,
      for add, insert content at line, making this record's content become this line,
      for remove, remove content at this line -->
    <!-- line is the real time line, if inserted something, later insert's line is counted after this insertion -->
    <field name="Line" type="int" />
    <!-- this is per line, but still don't know the appropriote string length so use text -->
    <field name="Content" type="text" />
  </table>
  <table name="EmbeddedFile">
    <primary-key field="FileId" />
    <field name="FileId" type="id" />
    <field name="UserId" type="int" />
    <field name="PageId" type="id" />
    <field name="Name" type="string" size="100" />
    <field name="Content" type="binary" />
  </table> 
  <table name="Query">
    <primary-key field="QueryId" />
    <foreign-key field="BookId" table="Book" />
    <field name="QueryId" type="id" />
    <field name="UserId" type="int" />
    <field name="BookId" type="id?" />
    <field name="IncludeBookName" type="bool" />
    <field name="IncludeSectionName" type="bool" />
    <field name="IncludePageName" type="bool" />
    <field name="IncludePageContent" type="bool" />
    <field name="UseRegularExpression" type="bool" />
    <field name="Content" type="string" />
  </table>
  <----------------------------------------------/>
  <----------------------------------------------/>
  <type name="Book">
    <field name="id" type="id" />
    <field name="name" type="string" />
    <!-- datetime is utc and iso8601 -->
    <field name="createTime" type="datetime?" />
    <field name="updateTime" type="datetime?" />
    <!-- all sections in book -->
    <field name="sections" type="Section[]" />
    <!-- pages that belong directly to book (not in any section) -->
    <field name="pages" type="Page[]" />
  </type>
  <type name="Section">
    <field name="id" type="id" />
    <!-- null for parent means root level section -->
    <field name="parentId" type="id?" />
    <field name="name" type="string" />
    <field name="createTime" type="datetime?" />
    <field name="updateTime" type="datetime?" />
    <field name="sections" type="Section[]" />
    <field name="pages" type="Page[]" />
  </type>
  <type name="Page">
    <field name="id" type="id" />
    <field name="name" type="string" />
    <field name="content" type="string" />
    <field name="createTime" type="datetime?" />
    <field name="updateTime" type="datetime?" />
    <field name="shareId" type="string?" />
    <field name="files" type="EmbeddedFile[]" />
  </type>
  <type name="PageHistory">
    <field name="id" type="id" />
    <field name="name" type="string" />
    <field name="createTime" type="datetime?" />
    <field name="operations" type="PageOperation[]" />
  </type>
  <type name="PageOperation">
    <field name="historyId" type="id" />
    <field name="kind" type="string" />
    <field name="line" type="int" />
    <field name="content" type="string" />
  </type>
  <type name="EmbeddedFile">
    <field name="id" type="id" />
    <field name="name" type="string" />
    <!-- base64 encoded binary content -->
    <field name="content" type="string" />
    <field name="createTime" type="datetime?" />
  </type>
  <type name="SharePageResult">
    <field name="id" type="string" />
  </type>
  <type name="Query">
    <field name="includeBookName" type="bool" />
    <field name="includeSectionName" type="bool" />
    <field name="includePageName" type="bool" />
    <field name="includePageContent" type="bool" />
    <field name="bookId" type="id?" />
    <field name="regex" type="bool" />
    <field name="content" type="string" />
  </type>
  <type name="QueryResult">
    <!-- matched book id + name -->
    <field name="Books" type="Book[]" />
    <!-- matched section id + name -->
    <field name="SectionNames" type="Section[]" />
    <!-- matched page id + name -->
    <!-- if page name match query.content, display it, else it is content match -->
    <field name="PageNames" type="Page[]" />
  </type>
  <!-- get book id + name -->
  <action key="main" name="GetBooks" return="Book[]" />
  <!-- get id, name, sections, page id + names -->
  <action key="main" name="GetBook" a1="bookId" return="Book" />
  <!-- only use body.name -->
  <action key="main" name="AddBook" body="Book" return="Book" />
  <!-- update book name -->
  <action key="main" name="UpdateBook" body="Book" return="Book" />
  <!-- TODO not allow remove book when there is any page -->
  <action key="main" name="RemoveBook" a1="bookId" />
  <!-- creates section in specified book, under optional parent section -->
  <action key="main" name="AddSection" a1="bookId" a2="sectionId?" return="Section" />
  <action key="main" name="UpdateSection" a1="bookId" body="Section" return="Section" />
  <action key="main" name="MoveSection" a1="bookId" a2="sectionId" a3="newParentId?" />
  <!-- TODO not allow remove section where there is any page -->
  <action key="main" name="RemoveSection" a1="bookId" a2="sectionId" />
  <action key="main" name="GetPage" a1="pageId" return="Page" />
  <action key="share" name="PublicGetPage" public="true" a1="shareId:guid" return="Page" />
  <!-- create empty page, only use body.name, use default name if no body.name -->
  <action key="main" name="AddPage" a1="bookId" a2="sectionId?" body="Page" return="Page" />
  <!-- update page name or content -->
  <action key="main" name="UpdatePage" body="Page" return="Page" />
  <action key="main" name="MovePage" a1="pageId" a2="newSectionId?" />
  <action key="main" name="SharePage" a1="pageId" return="SharePageResult" />
  <action key="main" name="UnsharePage" a1="pageId" />
  <action key="main" name="RemovePage" a1="pageId" />
  <!-- Page history operations -->
  <action key="main" name="GetPageHistories" a1="pageId" return="PageHistory[]" />
  <action key="main" name="GetPageHistory" a1="pageId" a1="historyId" return="PageHistory" />
  <!-- create new history version (manual save) -->
  <action key="main" name="SavePageVersion" a1="pageId" body="PageHistory" return="PageHistory" />
  <!-- restore page content to a specific history version -->
  <action key="main" name="RestorePageVersion" a1="pageId" a2="historyId" return="Page" />
  <action key="main" name="RemovePageVersion" a1="historyId" />
  <!-- Embedded file operations -->
  <action key="main" name="GetPageFiles" a1="pageId" return="EmbeddedFile[]" />
  <action key="main" name="GetPageFile" a1="fileId" return="EmbeddedFile" />
  <action key="main" name="AddPageFile" a1="pageId" body="EmbeddedFile" return="EmbeddedFile" />
  <action key="main" name="UpdatePageFile" body="EmbeddedFile" return="EmbeddedFile" />
  <action key="main" name="RemovePageFile" a1="fileId" />
  <!-- Search operations -->
  <action key="main" name="Search" body="Query" return="QueryResult" />
</shapes>
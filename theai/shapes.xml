<?xml version="1.0" encoding="utf-8" ?>
<shapes app="yala" database="YALA">
  <table name="Session">
    <primary-key field="SessionId" />
    <field name="SessionId" type="id" />
    <field name="UserId" type="int" />
    <field name="Name" type="string" size="100" />
    <field name="Comment" type="text?" />
    <field name="Tags" type="string" size="200" />
    <field name="Shared" type="bool" />
    <field name="ShareId" type="string?" size="36" />
  </table>
  <table name="Message">
    <primary-key field="SessionId,MessageId" />
    <foreign-key field="SessionId" table="Session" />
    <field name="SessionId" type="id" />
    <!-- this is session internal id, start from 1 -->
    <field name="MessageId" type="int" />
    <!-- first message does not have parent id -->
    <!-- first message is also allowed to diverge,
      so there maybe multiple messages with no parent id in a session -->
    <field name="ParentMessageId" type="id?" />
    <field name="Role" type="string" size="32" />
    <field name="Content" type="text" />
    <!-- I currently only use non reasoning model, but still add this for future -->
    <field name="ThinkingContent" type="text?" />
    <!-- token count from root to this message, so only available for user message -->
    <field name="PromptTokenCount" type="int?" />
    <field name="CompletionTokenCount" type="int?" />
  </table>
  <table name="UserModel">
    <primary-key field="UserId" />
    <field name="UserId" type="id" />
    <!-- model name -->
    <!-- in theory you can put a base url here because
      for now supported models are all openai completion api compatible,
      but there will be differences so the api difference handling is in source code -->
    <field name="Name" type="string" size="100" />
    <field name="APIKey" type="string" size="100" />
  </table>
  <----------------------------------------------/>
  <----------------------------------------------/>
  <type name="Session">
    <field name="id" type="id" />
    <field name="name" type="string" />
    <field name="comment" type="string?" />
    <!-- datetime is utc and iso8601 -->
    <field name="createTime" type="datetime?" />
    <field name="updateTime" type="datetime?" />
    <!-- NOTE currently not support array type,
      but this currently works as it regarded as a custom type -->
    <field name="tags" type="string[]" />
    <field name="shareId" type="string?" />
    <field name="messages" type="Message[]" />
  </type>
  <type name="Message">
    <field name="id" type="id" />
    <!-- null for parent is root -->
    <field name="parentId" type="id?" />
    <field name="role" type="string" />
    <field name="content" type="string" />
    <field name="thinkingContent" type="string?" />
    <field name="promptTokenCount" type="int?" />
    <field name="completionTokenCount" type="int?" />
    <!-- TODO display datetime by the way with token -->
    <field name="createTime" type="datetime?" />
    <field name="updateTime" type="datetime?" />
  </type>
  <type name="ShareSessionResult">
    <field name="id" type="string" />
  </type>
  <type name="AccountBalance">
    <!-- this is floating point, but should work in current framework with little validation -->
    <field name="balance" type="int" />
  </type>
  <!-- this returned entity does not contain messages -->
  <action key="main" name="GetSessions" return="Session[]" />
  <action key="main" name="GetSession" a1="sessionId" return="Session" />
  <!-- for public api, path logic will exclude the Public prefix in name,
    generated backend function call and front end function wrapper will include the Public -->
  <action key="share" name="PublicGetSession" public="true" a1="shareId:guid" return="Session" />
  <!-- use body.name as name, or generate a name if not provided -->
  <!-- requires exactly one message, role is user or system -->
  <action key="main" name="AddSession" body="Session" return="Session" />
  <!-- rename session or update comment -->
  <action key="main" name="UpdateSession" body="Session" return="Session" />
  <action key="main" name="RemoveSession" a1="sessionId" />
  <!-- add new message (role + content) to parentId -->
  <action key="main" name="AddMessage" a1="sessionId" body="Message" return="Message" />
  <!-- update message content -->
  <action key="main" name="UpdateMessage" a1="sessionId" body="Message" return="Message" />
  <!-- remove message and all subsequent nodes, cannot remove last message -->
  <action key="main" name="RemoveMessageTree" a1="sessionId" a2="messageId" />
  <!-- complete! return generated assistant message -->
  <action key="main" name="CompleteMessage" a1="sessionId" a2="messageId" return="Message" />
  <!-- return shareid the guid -->
  <action key="main" name="ShareSession" a1="sessionId" return="ShareSessionResult" />
  <action key="main" name="UnshareSession" a1="sessionId" />
  <action key="main" name="GetModels" return="string[]" />
  <!-- don't use up money -->
  <action key="main" name="GetAccountBalance" return="AccountBalance" />
  <!-- following are currently investigating -->
  <!-- these 2 types are actually same as db and actually use in db query -->
  <type name="dsession">
    <field name="id" type="string" />
    <field name="seq_id" type="number" />
    <field name="title" type="string" />
    <field name="inserted_at" type="datetime" />
    <field name="updated_at" type="datetime" />
  </type>
  <type name="dmessage">
    <field name="message_id" type="number" />
    <field name="parent_id" type="number?" />
    <field name="role" type="string" />
    <field name="content" type="string" />
    <field name="thinking_content" type="string?" />
    <field name="accumulated_token_usage" type="number" />
    <field name="inserted_at" type="datetime" />
  </type>
  <action key="temp" name="GetDSessions" return="dsession[]" />
  <action key="temp" name="GetDMessages" a1="id:string" return="dmessage[]" />
</shapes>